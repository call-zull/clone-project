{
    "sourceFile": "app/Http/Controllers/Auth/RegisterController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1730518963636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730518969537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,37 +53,37 @@\n         $positions = Position::all();\n         return view('auth.register', compact('positions'));\n      }\n \n-     protected function validator(array $data)\n-     {\n-         return Validator::make($data, [\n-             'name' => ['required', 'string', 'max:255'],\n-             'nim' => ['required', 'string', 'max:20'], // Validasi NIM\n-             'phone' => ['required', 'string', 'max:15'], // Validasi No HP\n-             'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],\n-             'position_id' => ['required', 'integer'],\n-             'password' => ['required', 'string', 'min:8', 'confirmed'],\n-         ]);\n-     }\n-     \n-     protected function create(array $data)\n-     {\n-         // Buat pengguna baru\n-         $user = User::create([\n-             'name' => $data['name'],\n-             'email' => $data['email'],\n-             'position_id' => $data['position_id'],\n-             'password' => Hash::make($data['password']),\n-         ]);\n-     \n-         // Buat profil pengguna\n-         $user->profile()->create([\n-             'nim' => $data['nim'],\n-             'phone' => $data['phone'],\n-             'major_id' => $data['major_id'], // Pastikan 'major_id' dikirim dari form jika diperlukan\n-         ]);\n-     \n-         return $user;\n-     }\n-     \n+    protected function validator(array $data)\n+    {\n+        return Validator::make($data, [\n+            'name' => ['required', 'string', 'max:255'],\n+            'nim' => ['required', 'string', 'max:20'], // Validasi NIM\n+            'phone' => ['required', 'string', 'max:15'], // Validasi No HP\n+            'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],\n+            'position_id' => ['required', 'integer'],\n+            'password' => ['required', 'string', 'min:8', 'confirmed'],\n+        ]);\n+    }\n+\n+    protected function create(array $data)\n+    {\n+        // Buat pengguna baru\n+        $user = User::create([\n+            'name' => $data['name'],\n+            'email' => $data['email'],\n+            'position_id' => $data['position_id'],\n+            'password' => Hash::make($data['password']),\n+        ]);\n+\n+        // Buat profil pengguna\n+        $user->profile()->create([\n+            'nim' => $data['nim'],\n+            'phone' => $data['phone'],\n+            'major_id' => $data['major_id'], // Pastikan 'major_id' dikirim dari form jika diperlukan\n+        ]);\n+\n+        return $user;\n+    }\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730519676554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,37 +53,38 @@\n         $positions = Position::all();\n         return view('auth.register', compact('positions'));\n      }\n \n-    protected function validator(array $data)\n-    {\n-        return Validator::make($data, [\n-            'name' => ['required', 'string', 'max:255'],\n-            'nim' => ['required', 'string', 'max:20'], // Validasi NIM\n-            'phone' => ['required', 'string', 'max:15'], // Validasi No HP\n-            'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],\n-            'position_id' => ['required', 'integer'],\n-            'password' => ['required', 'string', 'min:8', 'confirmed'],\n-        ]);\n-    }\n+     protected function validator(array $data)\n+     {\n+         return Validator::make($data, [\n+             'name' => ['required', 'string', 'max:255'],\n+             'nim' => ['required', 'string', 'max:20'],\n+             'phone' => ['required', 'string', 'max:15'],\n+             'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],\n+             'position_id' => ['required', 'integer'],\n+             'major_id' => ['required', 'integer'], // Validasi untuk major\n+             'password' => ['required', 'string', 'min:8', 'confirmed'],\n+         ]);\n+     }\n+     \n+     protected function create(array $data)\n+     {\n+         $user = User::create([\n+             'name' => $data['name'],\n+             'email' => $data['email'],\n+             'position_id' => $data['position_id'],\n+             'password' => Hash::make($data['password']),\n+         ]);\n+     \n+         // Membuat profil terkait dengan pengguna\n+         $user->profile()->create([\n+             'nim' => $data['nim'],\n+             'phone' => $data['phone'],\n+             'major_id' => $data['major_id'], // Menyimpan id major\n+         ]);\n+     \n+         return $user;\n+     }\n+     \n \n-    protected function create(array $data)\n-    {\n-        // Buat pengguna baru\n-        $user = User::create([\n-            'name' => $data['name'],\n-            'email' => $data['email'],\n-            'position_id' => $data['position_id'],\n-            'password' => Hash::make($data['password']),\n-        ]);\n-\n-        // Buat profil pengguna\n-        $user->profile()->create([\n-            'nim' => $data['nim'],\n-            'phone' => $data['phone'],\n-            'major_id' => $data['major_id'], // Pastikan 'major_id' dikirim dari form jika diperlukan\n-        ]);\n-\n-        return $user;\n-    }\n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730519826998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,13 +48,15 @@\n      * @return \\Illuminate\\Contracts\\Validation\\Validator\n      */\n \n      public function showRegistrationForm()\n-     {\n-        $positions = Position::all();\n-        return view('auth.register', compact('positions'));\n-     }\n+{\n+    $positions = Position::all();\n+    $majors = Major::all(); // Ambil semua jurusan\n+    return view('auth.register', compact('positions', 'majors')); // Kirim posisi dan jurusan ke view\n+}\n \n+\n     protected function validator(array $data)\n     {\n         return Validator::make($data, [\n             'name' => ['required', 'string', 'max:255'],\n"
                },
                {
                    "date": 1730519833030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n \n namespace App\\Http\\Controllers\\Auth;\n \n use App\\Http\\Controllers\\Controller;\n+use App\\Models\\Major;\n use App\\Models\\Position;\n use App\\Models\\User;\n use Illuminate\\Foundation\\Auth\\RegistersUsers;\n use Illuminate\\Support\\Facades\\Hash;\n"
                }
            ],
            "date": 1730518963636,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Position;\nuse App\\Models\\User;\nuse Illuminate\\Foundation\\Auth\\RegistersUsers;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Support\\Facades\\Validator;\n\nclass RegisterController extends Controller\n{\n    /*\n    |--------------------------------------------------------------------------\n    | Register Controller\n    |--------------------------------------------------------------------------\n    |\n    | This controller handles the registration of new users as well as their\n    | validation and creation. By default this controller uses a trait to\n    | provide this functionality without requiring any additional code.\n    |\n    */\n\n    use RegistersUsers;\n\n    /**\n     * Where to redirect users after registration.\n     *\n     * @var string\n     */\n    protected $redirectTo = '/home';\n\n    /**\n     * Create a new controller instance.\n     *\n     * @return void\n     */\n    public function __construct()\n    {\n        $this->middleware('guest');\n    }\n\n    /**\n     * Get a validator for an incoming registration request.\n     *\n     * @param  array  $data\n     * @return \\Illuminate\\Contracts\\Validation\\Validator\n     */\n\n     public function showRegistrationForm()\n     {\n        $positions = Position::all();\n        return view('auth.register', compact('positions'));\n     }\n\n     protected function validator(array $data)\n     {\n         return Validator::make($data, [\n             'name' => ['required', 'string', 'max:255'],\n             'nim' => ['required', 'string', 'max:20'], // Validasi NIM\n             'phone' => ['required', 'string', 'max:15'], // Validasi No HP\n             'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],\n             'position_id' => ['required', 'integer'],\n             'password' => ['required', 'string', 'min:8', 'confirmed'],\n         ]);\n     }\n     \n     protected function create(array $data)\n     {\n         // Buat pengguna baru\n         $user = User::create([\n             'name' => $data['name'],\n             'email' => $data['email'],\n             'position_id' => $data['position_id'],\n             'password' => Hash::make($data['password']),\n         ]);\n     \n         // Buat profil pengguna\n         $user->profile()->create([\n             'nim' => $data['nim'],\n             'phone' => $data['phone'],\n             'major_id' => $data['major_id'], // Pastikan 'major_id' dikirim dari form jika diperlukan\n         ]);\n     \n         return $user;\n     }\n     \n}"
        }
    ]
}